// M√≥dulo de internacionalizaci√≥n que puede ser importado desde cualquier parte
// Uso: import { I18nManager } from './i18n-module.js';

export class I18nManager {
    constructor() {
        // Usar idioma inicial desde Laravel si est√° disponible
        this.currentLang = window.initialLanguage || 'es';
        console.log('üöÄ I18nManager inicializado con idioma:', this.currentLang);
        this.translations = {
            es: {
                // Navegaci√≥n
                home: 'Inicio',
                about: 'Nosotros',
                projects: 'Proyectos',
                services: 'Servicios',
                blog: 'Blog',
                blog_detail: 'Detalle del Blog',
                pages: 'P√°ginas',
                elements: 'Elementos',
                project_detail: 'Detalle del Proyecto',
                service_detail: 'Detalle del Servicio',
                contact: 'Contacto',
                contact_btn: 'Cont√°ctanos',
                language: 'Idioma',
                
                // P√°gina de inicio - Hero Section
                welcome: 'Bienvenido',
                hero_subtitle: 'maquinaria industrial y servicios de construcci√≥n',
                our_services: 'Nuestros Servicios',
                
                // Servicios
                our_services_title: 'Nuestros Servicios',
                services_back: 'Servicios',
                engineering_techniques: 'T√©cnicas e implementaci√≥n de ingenier√≠a',
                read_more: 'Leer m√°s',
                
                // Sobre nosotros
                who_we_are: 'Qui√©nes somos',
                about_us_back: 'Sobre nosotros',
                read_more_about_us: 'Leer m√°s sobre nosotros',
                company_description_1: 'En Vilba, ofrecemos soluciones confiables en renta de equipo pesado para tus proyectos industriales, de construcci√≥n o log√≠sticos.',
                company_description_2: 'Contamos con una amplia variedad de maquinaria como montacargas, gr√∫as, plataformas y m√°s. Nos enfocamos en brindar equipos en excelente estado, acompa√±ados de un servicio al cliente profesional y puntual. Ya sea para uso diario o por proyecto, en Vilba te apoyamos con la maquinaria que necesitas, cuando la necesitas.',
                
                // Proyectos
                our_projects: 'Nuestros Proyectos',
                gallery: 'Galer√≠a',
                all: 'Todos',
                interiors: 'Interiores',
                recent: 'Recientes',
                drainage: 'Drenaje',
                parks: 'Parques',
                
                // Testimonios
                testimonials: 'Testimonios',
                what_clients_say: 'Lo que dicen nuestros clientes',
                
                // Equipo
                our_team: 'Nuestro Equipo',
                team_back: 'Equipo',
                meet_team: 'Conoce a nuestro equipo',
                
                // Blog
                latest_news: '√öltimas Noticias',
                news_back: 'Noticias',
                
                // Footer
                quick_links: 'Enlaces R√°pidos',
                follow_us: 'S√≠guenos',
                newsletter: 'Bolet√≠n',
                subscribe: 'Suscribirse',
                enter_email: 'Ingresa tu email',
                copyright: 'Todos los derechos reservados',
                
                // Formularios
                name: 'Nombre',
                email: 'Email',
                phone: 'Tel√©fono',
                message: 'Mensaje',
                send: 'Enviar',
                required: 'Requerido',
                
                // Logo alt text
                logo_alt: 'Logo de Gr√∫as Vilba',
                
                // Otros textos comunes
                loading: 'Cargando...',
                error: 'Error',
                success: '√âxito',
                view_more: 'Ver m√°s',
                learn_more: 'Aprender m√°s',
                get_quote: 'Obtener cotizaci√≥n',
                call_now: 'Llamar ahora',
                years_experience: 'A√±os de experiencia',
                since: 'Desde'
            },
            en: {
                // Navigation
                home: 'Home',
                about: 'About Us',
                projects: 'Projects',
                services: 'Services',
                blog: 'Blog',
                blog_detail: 'Blog Detail',
                pages: 'Pages',
                elements: 'Elements',
                project_detail: 'Project Detail',
                service_detail: 'Service Detail',
                contact: 'Contact',
                contact_btn: 'Contact Us',
                language: 'Language',
                
                // Home page - Hero Section
                welcome: 'Welcome',
                hero_subtitle: 'industrial machinery and construction services',
                our_services: 'Our Services',
                
                // Services
                our_services_title: 'Our Services',
                services_back: 'Services',
                engineering_techniques: 'Engineering techniques and implementation',
                read_more: 'Read more',
                
                // About us
                who_we_are: 'Who we are',
                about_us_back: 'About us',
                read_more_about_us: 'Read more about us',
                company_description_1: 'At Vilba, we offer reliable solutions in heavy equipment rental for your industrial, construction or logistics projects.',
                company_description_2: 'We have a wide variety of machinery such as forklifts, cranes, platforms and more. We focus on providing equipment in excellent condition, accompanied by professional and punctual customer service. Whether for daily use or by project, at Vilba we support you with the machinery you need, when you need it.',
                
                // Projects
                our_projects: 'Our Projects',
                gallery: 'Gallery',
                all: 'All',
                interiors: 'Interiors',
                recent: 'Recent',
                drainage: 'Drainage',
                parks: 'Parks',
                
                // Testimonials
                testimonials: 'Testimonials',
                what_clients_say: 'What our clients say',
                
                // Team
                our_team: 'Our Team',
                team_back: 'Team',
                meet_team: 'Meet our team',
                
                // Blog
                latest_news: 'Latest News',
                news_back: 'News',
                
                // Footer
                quick_links: 'Quick Links',
                follow_us: 'Follow Us',
                newsletter: 'Newsletter',
                subscribe: 'Subscribe',
                enter_email: 'Enter your email',
                copyright: 'All rights reserved',
                
                // Forms
                name: 'Name',
                email: 'Email',
                phone: 'Phone',
                message: 'Message',
                send: 'Send',
                required: 'Required',
                
                // Logo alt text
                logo_alt: 'Vilba Cranes Logo',
                
                // Other common texts
                loading: 'Loading...',
                error: 'Error',
                success: 'Success',
                view_more: 'View more',
                learn_more: 'Learn more',
                get_quote: 'Get quote',
                call_now: 'Call now',
                years_experience: 'Years of experience',
                since: 'Since'
            }
        };
        
        this.flagPaths = {
            'es': '/assets/images/flags/mx.svg',
            'en': '/assets/images/flags/us.svg'
        };
        
        this.init();
    }
    
    async init() {
        console.log('üîß Inicializando I18nManager...');
        
        // Prioridad de idioma:
        // 1. Idioma desde Laravel (window.initialLanguage)
        // 2. Idioma guardado en localStorage
        // 3. Idioma por defecto (es)
        
        if (window.initialLanguage && (window.initialLanguage === 'es' || window.initialLanguage === 'en')) {
            this.currentLang = window.initialLanguage;
            console.log('‚úÖ Usando idioma desde Laravel:', this.currentLang);
        } else {
            const savedLang = localStorage.getItem('vilba_language');
            if (savedLang && (savedLang === 'es' || savedLang === 'en')) {
                this.currentLang = savedLang;
                console.log('‚úÖ Usando idioma desde localStorage:', this.currentLang);
            } else {
                console.log('‚úÖ Usando idioma por defecto:', this.currentLang);
            }
        }
        
        // Sincronizar localStorage con el idioma actual
        localStorage.setItem('vilba_language', this.currentLang);
        
        console.log(`üìä Idioma final configurado: ${this.currentLang}`);
        
        // Detectar ubicaci√≥n del usuario como respaldo
        await this.detectUserLocation();
        
        // Configurar rutas de banderas con URL base
        const baseUrl = window.location.origin;
        this.flagPaths = {
            'es': `${baseUrl}/assets/images/flags/mx.svg`,
            'en': `${baseUrl}/assets/images/flags/us.svg`
        };
        
        // Configurar el selector de idioma
        this.setupLanguageSelector();
        
        // Aplicar traducciones iniciales
        this.applyTranslations();
        
        // Configurar eventos
        this.setupEventListeners();
    }
    
    async detectUserLocation() {
        // Primero verificar si hay un idioma guardado en localStorage
        const savedLang = localStorage.getItem('vilba_language');
        if (savedLang && (savedLang === 'es' || savedLang === 'en')) {
            this.currentLang = savedLang;
            console.log(`Idioma cargado desde localStorage: ${this.currentLang}`);
            return;
        }
        
        try {
            // Si no hay idioma guardado, intentar detectar por ubicaci√≥n
            const response = await fetch('https://ipapi.co/json/');
            const data = await response.json();
            
            // Si el usuario est√° en M√©xico, usar espa√±ol; si no, ingl√©s
            if (data.country_code === 'MX') {
                this.currentLang = 'es';
            } else {
                this.currentLang = 'en';
            }
            
            // Guardar la detecci√≥n autom√°tica en localStorage
            localStorage.setItem('vilba_language', this.currentLang);
            console.log(`Idioma detectado autom√°ticamente: ${this.currentLang}`);
            
        } catch (error) {
            console.warn('No se pudo detectar la ubicaci√≥n, usando espa√±ol por defecto:', error);
            this.currentLang = 'es';
            localStorage.setItem('vilba_language', this.currentLang);
        }
    }
    
    setupLanguageSelector() {
        // Actualizar la apariencia visual del selector seg√∫n el idioma actual
        const languageOptions = document.querySelectorAll('.language-option');
        
        languageOptions.forEach(option => {
            const optionLang = option.getAttribute('data-lang');
            if (optionLang === this.currentLang) {
                // Marcar visualmente la opci√≥n activa
                option.style.fontWeight = 'bold';
                option.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';
                option.style.borderRadius = '4px';
                option.style.padding = '4px 8px';
            } else {
                option.style.fontWeight = 'normal';
                option.style.backgroundColor = 'transparent';
                option.style.padding = '4px 8px';
            }
        });
        
        console.log(`Idioma actual configurado: ${this.currentLang}`);
    }
    
    setupEventListeners() {
        console.log('üîß Configurando event listeners para i18n...');
        
        // Usar delegaci√≥n de eventos para manejar clics en opciones de idioma
        // Esto funciona mejor con contenido din√°mico y m√≥dulos ES6
        document.addEventListener('click', (e) => {
            console.log('üëÜ Click detectado en:', e.target);
            
            // Verificar si el elemento clickeado es una opci√≥n de idioma
            if (e.target.closest('.language-option')) {
                console.log('üåê Click en opci√≥n de idioma detectado!');
                e.preventDefault();
                e.stopPropagation();
                
                const option = e.target.closest('.language-option');
                const selectedLang = option.getAttribute('data-lang');
                
                console.log(`üîÑ Idioma seleccionado: ${selectedLang}`);
                console.log('üìç Elemento de opci√≥n:', option);
                
                this.changeLanguage(selectedLang);
                
                // Cerrar el men√∫ despu√©s de seleccionar
                const submenu = option.closest('.submenu');
                if (submenu) {
                    submenu.style.display = 'none';
                    setTimeout(() => {
                        submenu.style.display = '';
                    }, 100);
                }
            }
        });
        
        // Tambi√©n configurar eventos directos como respaldo
        const languageOptions = document.querySelectorAll('.language-option');
        console.log(`Configurando eventos para ${languageOptions.length} opciones de idioma`);
        
        languageOptions.forEach(option => {
            // Remover listener anterior si existe
            option.removeEventListener('click', this.handleLanguageClick);
            
            // Agregar nuevo listener
            option.addEventListener('click', this.handleLanguageClick.bind(this));
        });
    }
    
    changeLanguage(newLang) {
        console.log(`üöÄ changeLanguage llamado con: ${newLang}`);
        console.log(`üìä Idioma actual: ${this.currentLang}`);
        
        if (newLang !== this.currentLang && (newLang === 'es' || newLang === 'en')) {
            console.log(`‚úÖ Cambiando idioma de ${this.currentLang} a ${newLang}`);
            
            // Guardar en localStorage inmediatamente
            localStorage.setItem('vilba_language', newLang);
            console.log(`üíæ Idioma guardado en localStorage: ${newLang}`);
            
            // Redirigir a la ruta de Laravel para cambiar idioma y recargar p√°gina
            console.log(`üîÑ Redirigiendo a Laravel para cambio de idioma...`);
            window.location.href = `/cambiar-idioma/${newLang}`;
            
        } else {
            console.log(`‚ùå No se cambi√≥ el idioma. Raz√≥n: newLang=${newLang}, currentLang=${this.currentLang}`);
        }
    }
    
    applyTranslations() {
        console.log('üî§ Aplicando traducciones...');
        const elements = document.querySelectorAll('[data-translate]');
        console.log(`üìù Encontrados ${elements.length} elementos con data-translate`);
        
        elements.forEach((element, index) => {
            const key = element.getAttribute('data-translate');
            const translation = this.translate(key);
            
            console.log(`üîç Elemento ${index + 1}: key='${key}', traducci√≥n='${translation}'`);
            
            if (translation) {
                const oldText = element.textContent;
                element.textContent = translation;
                console.log(`‚úèÔ∏è Texto actualizado: '${oldText}' ‚Üí '${translation}'`);
            } else {
                console.log(`‚ö†Ô∏è No se encontr√≥ traducci√≥n para la clave: '${key}'`);
            }
        });
        
        // Actualizar atributos alt de im√°genes
        const images = document.querySelectorAll('img[data-translate-alt]');
        console.log(`üñºÔ∏è Encontradas ${images.length} im√°genes con data-translate-alt`);
        images.forEach(img => {
            const key = img.getAttribute('data-translate-alt');
            const translation = this.translate(key);
            
            if (translation) {
                img.setAttribute('alt', translation);
                console.log(`üñºÔ∏è Alt actualizado: '${key}' ‚Üí '${translation}'`);
            }
        });
        
        // Actualizar alt text de los logos
        const logoBig = document.getElementById('logo-big');
        const logoSmall = document.getElementById('logo-small');
        
        if (logoBig) {
            logoBig.alt = this.translations[this.currentLang].logo_alt;
        }
        
        if (logoSmall) {
            logoSmall.alt = this.translations[this.currentLang].logo_alt;
        }
        
        // Actualizar el t√≠tulo de la p√°gina
        const currentTitle = document.title;
        if (this.currentLang === 'en' && !currentTitle.includes('Vilba Cranes')) {
            document.title = currentTitle.replace('Gr√∫as Vilba', 'Vilba Cranes');
        } else if (this.currentLang === 'es' && !currentTitle.includes('Gr√∫as Vilba')) {
            document.title = currentTitle.replace('Vilba Cranes', 'Gr√∫as Vilba');
        }
        
        console.log('‚úÖ Traducciones aplicadas completamente');
    }
    
    // M√©todo p√∫blico para obtener una traducci√≥n espec√≠fica
    translate(key) {
        return this.translations[this.currentLang][key] || key;
    }
    
    // M√©todo p√∫blico para obtener el idioma actual
    getCurrentLanguage() {
        return this.currentLang;
    }
    
    // M√©todo p√∫blico para agregar nuevas traducciones
    addTranslations(lang, translations) {
        if (this.translations[lang]) {
            this.translations[lang] = { ...this.translations[lang], ...translations };
        } else {
            this.translations[lang] = translations;
        }
    }
    
    // M√©todo para manejar clics en opciones de idioma
    handleLanguageClick(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const selectedLang = e.currentTarget.getAttribute('data-lang');
        console.log(`Idioma seleccionado (evento directo): ${selectedLang}`);
        
        this.changeLanguage(selectedLang);
        
        // Cerrar el men√∫ despu√©s de seleccionar
        const submenu = e.currentTarget.closest('.submenu');
        if (submenu) {
            submenu.style.display = 'none';
            setTimeout(() => {
                submenu.style.display = '';
            }, 100);
        }
    }
    
    // M√©todo para reinicializar los eventos (√∫til para contenido din√°mico)
    reinitializeEvents() {
        this.setupEventListeners();
    }
}

// Crear instancia global cuando se importe el m√≥dulo
let globalI18nManager = null;

export function getI18nManager() {
    if (!globalI18nManager) {
        globalI18nManager = new I18nManager();
    }
    return globalI18nManager;
}

// Funci√≥n de conveniencia para cambiar idioma desde cualquier parte
export function changeLanguage(lang) {
    const manager = getI18nManager();
    manager.changeLanguage(lang);
}

// Funci√≥n de conveniencia para obtener traducciones
export function translate(key) {
    const manager = getI18nManager();
    return manager.translate(key);
}

// Auto-inicializaci√≥n cuando el DOM est√© listo
function initializeWhenReady() {
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            console.log('DOM cargado, inicializando i18n...');
            setTimeout(() => {
                getI18nManager();
            }, 100); // Peque√±o delay para asegurar que todo est√© listo
        });
    } else {
        console.log('DOM ya est√° listo, inicializando i18n...');
        setTimeout(() => {
            getI18nManager();
        }, 100);
    }
}

// Llamar la inicializaci√≥n
initializeWhenReady();